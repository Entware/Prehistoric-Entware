diff -ur a/config/asterisklogs.html b/config/asterisklogs.html
--- a/config/asterisklogs.html	2009-06-23 19:21:33.000000000 +0400
+++ b/config/asterisklogs.html	2012-08-27 12:10:33.978861207 +0400
@@ -49,7 +49,7 @@
 		var ld = Number( sel_date.split(' ')[0] );
 		var space = (ld < 10 ) ? '  ' : ' ' ;
 		var lm = sel_date.split(' ')[1]; lm = lm.trim();
-		var tmp_cmd = "/bin/grep /var/log/asterisk/messages -e '" + lm + space + ld + " ' " ;
+		var tmp_cmd = "/bin/grep /Apps/opt/var/log/asterisk/messages -e '" + lm + space + ld + " ' " ;
 		parent.ASTGUI.dialog.waitWhile(' Loading Asterisk Logs ...');
 		top.log.debug(tmp_cmd);
 		ASTGUI.systemCmdWithOutput( tmp_cmd , function(output){
diff -ur a/config/js/backup.js b/config/js/backup.js
--- a/config/js/backup.js	2011-05-04 21:14:11.000000000 +0400
+++ b/config/js/backup.js	2012-08-27 12:10:33.902859322 +0400
@@ -183,7 +183,7 @@
 		}
 	}else{
 		if(confirm('All your old configuration will be replaced by this backup configuration. \n\n Are you sure you want to proceed ?')){
-			//parent.astmanEngine.run_tool("rm /etc/asterisk/* -rf ", callback=function(){  } );
+			//parent.astmanEngine.run_tool("rm /Apps/opt/etc/asterisk/* -rf ", callback=function(){  } );
 			restore_bkp_step3(bkpPath + filename);
 		}
 	}
@@ -284,7 +284,7 @@
 		}) ;
 		return ;
 	}else{
-		parent.ASTGUI.systemCmd( "tar -chf " + bkpPath + bkpfile + ' ' +  ' /etc/asterisk', function(){
+		parent.ASTGUI.systemCmd( "tar -chf " + bkpPath + bkpfile + ' ' +  ' /Apps/opt/etc/asterisk', function(){
 			ASTGUI.feedback( { msg:'Backup Successful', showfor:2 });
 			parent.ASTGUI.dialog.waitWhile('Reloading List of backup Files');
 			setTimeout( function(){ parent.ASTGUI.dialog.hide(); window.location.reload(); } , 2000 );
diff -ur a/config/js/flashupdate.js b/config/js/flashupdate.js
--- a/config/js/flashupdate.js	2009-03-05 18:13:50.000000000 +0300
+++ b/config/js/flashupdate.js	2012-08-27 12:10:33.866855901 +0400
@@ -19,12 +19,12 @@
  *
  */
 var uImage_filename;
-var uImage_uploadpath = "/var/lib/asterisk/sounds/imageupdate";
+var uImage_uploadpath = "/Apps/opt/lib/asterisk/sounds/imageupdate";
 loaded_external = false;
 current_version = '';
 starteduploading = 0;
 var overlay_upload_Path ;
-var overlay_disk_Path = '/var/lib/asterisk/sounds/asteriskoverlay/';
+var overlay_disk_Path = '/Apps/opt/lib/asterisk/sounds/asteriskoverlay/';
 
 var check_forNewFirmwareVersions = function(){
 	parent.ASTGUI.dialog.waitWhile(' Checking for firmware updates ...');
@@ -169,8 +169,8 @@
 	var c = config2json({filename:'http.conf', usf:1});
 	_$('tdupload').style.display = ( c.hasOwnProperty('post_mappings') && c['post_mappings'].hasOwnProperty('uploads') && c['post_mappings']['uploads'] == uImage_uploadpath) ? '' : 'none';
 
-	ASTGUI.systemCmdWithOutput( "ls /var/lib/asterisk/sounds/a*" , function(a){
-		if( a.contains('/var/lib/asterisk/sounds/asteriskoverlay') ){
+	ASTGUI.systemCmdWithOutput( "ls /Apps/opt/lib/asterisk/sounds/a*" , function(a){
+		if( a.contains('/Apps/opt/lib/asterisk/sounds/asteriskoverlay') ){
 			_$('uploadOVERLAY_iframe').src = "upload_form.html" ;
 			$("#overlayUpload_TR").show();
 		}
diff -ur a/config/js/hardware_aa50.js b/config/js/hardware_aa50.js
--- a/config/js/hardware_aa50.js	2011-01-27 23:06:47.000000000 +0300
+++ b/config/js/hardware_aa50.js	2012-08-27 12:10:33.902859322 +0400
@@ -55,7 +55,7 @@
 		}
 	
 		ASTGUI.dialog.waitWhile('updating modprobe.conf ...');
-		var cmd1 = "cp /etc/asterisk/modprobe_default /etc/modprobe.conf";
+		var cmd1 = "cp /Apps/opt/etc/asterisk/modprobe_default /Apps/opt/etc/modprobe.conf";
 		var params = "options sx00i ";
 		var h = ASTGUI.getFieldValue('opermode') ;
 			if(h){ params += " opermode=" + h; }
@@ -91,7 +91,7 @@
 				if(h){ params += " vpmnlpmaxsupp=" + h; }
 		}
 	
-		var cmd2 = "echo \"" + params + "\" >> /etc/modprobe.conf ";
+		var cmd2 = "echo \"" + params + "\" >> /Apps/opt/etc/modprobe.conf ";
 	
 		var update_usersConf = function(){
 			// update MWI settings in users.conf
@@ -311,7 +311,7 @@
 		};
 		var s = $.ajax({ url: ASTGUI.paths.rawman+'?action=getconfig&filename=' + tmp_file , async: false }).responseText;
 		if( s.contains('Response: Error') && s.contains('Message: Config file not found') ){
-			ASTGUI.systemCmd( "touch /etc/asterisk/" + tmp_file, function(){
+			ASTGUI.systemCmd( "touch /Apps/opt/etc/asterisk/" + tmp_file, function(){
 				var u = new listOfSynActions(tmp_file) ;
 				u.new_action('delcat', 'general', "", ""); 
 				u.new_action('newcat', 'general', "", ""); 
@@ -357,7 +357,7 @@
 			}
 		}) ;
 
-		parent.ASTGUI.systemCmd( ' touch /etc/asterisk/applyzap.conf', function(){ // run ztscan and then try loading ztscan.conf
+		parent.ASTGUI.systemCmd( ' touch /Apps/opt/etc/asterisk/applyzap.conf', function(){ // run ztscan and then try loading ztscan.conf
 			setTimeout( function(){ 
 				var DAHDI_version = "0";
 				ASTGUI.systemCmdWithOutput( 'cat /sys/module/dahdi/version' , function(output){
diff -ur a/config/js/hardware_dahdi.js b/config/js/hardware_dahdi.js
--- a/config/js/hardware_dahdi.js	2011-04-01 20:49:20.000000000 +0400
+++ b/config/js/hardware_dahdi.js	2012-08-27 12:10:33.946861364 +0400
@@ -424,7 +424,7 @@
 		var ztsc = $.ajax({ url: ASTGUI.paths.rawman+'?action=getconfig&filename=' + ASTGUI.globals.dahdiScanOutput , async: false }).responseText;
 		var ztsc_Lower = ztsc.toLowerCase();
 		if( ztsc_Lower.contains('response: error') && ztsc_Lower.contains('message: config file not found') ){
-			parent.ASTGUI.dialog.waitWhile("Please check if <B>ztscan</B> is installed ? <BR> /etc/asterisk/dahdi_scan.conf not found");
+			parent.ASTGUI.dialog.waitWhile("Please check if <B>ztscan</B> is installed ? <BR> /Apps/opt/etc/asterisk/dahdi_scan.conf not found");
 			ASTGUI.feedback( { msg:"No Cards/Spans found,  No Config File found !!", showfor:2 });
 			return;
 		}
@@ -514,7 +514,7 @@
 		var usrs_Lower = usrs.toLowerCase();
 		if( usrs_Lower.contains('response: error') && usrs_Lower.contains('message: config file not found') ){
 			ASTGUI.feedback( { msg:"No Users File found !!", showfor:2 });
-			parent.ASTGUI.dialog.waitWhile("/etc/asterisk/users.conf not found");
+			parent.ASTGUI.dialog.waitWhile("/Apps/opt/etc/asterisk/users.conf not found");
 			return;
 		}
 		var n = config2json({ configFile_output: usrs, usf : 1 });// read users.conf and load switchtype, signalling, zapchan into the SPANS object
@@ -744,7 +744,7 @@
 
 
 var storeDetectedHardware = function(){
-	var cmd = 'rm /etc/asterisk/' + hwcfgfile + '; touch /etc/asterisk/' + hwcfgfile;
+	var cmd = 'rm /Apps/opt/etc/asterisk/' + hwcfgfile + '; touch /Apps/opt/etc/asterisk/' + hwcfgfile;
 	parent.ASTGUI.systemCmd( cmd, function(){ 
 		var storeNewinfo = function(){
 			var after = function(){
@@ -895,7 +895,7 @@
  		u.clearActions();
   	
 	
-		var cmd2 = "grep -v \"^" + params_to_delete + "\" /etc/modprobe.d/dahdi.conf > /etc/modprobe.d/dahdi.conf ; echo \"" + params + "\" >> /etc/modprobe.d/dahdi.conf ";
+		var cmd2 = "grep -v \"^" + params_to_delete + "\" /Apps/opt/etc/modprobe.d/dahdi.conf > /Apps/opt/etc/modprobe.d/dahdi.conf ; echo \"" + params + "\" >> /Apps/opt/etc/modprobe.d/dahdi.conf ";
 	
 		var update_usersConf = function(){
 			// update MWI settings in users.conf
diff -ur a/config/js/hardware.js b/config/js/hardware.js
--- a/config/js/hardware.js	2011-04-01 20:49:20.000000000 +0400
+++ b/config/js/hardware.js	2012-08-27 12:10:33.890858266 +0400
@@ -391,7 +391,7 @@
 		var ztsc = $.ajax({ url: ASTGUI.paths.rawman+'?action=getconfig&filename=ztscan.conf', async: false }).responseText;
 		var ztsc_Lower = ztsc.toLowerCase();
 		if( ztsc_Lower.contains('response: error') && ztsc_Lower.contains('message: config file not found') ){
-			parent.ASTGUI.dialog.waitWhile("Please check if <B>ztscan</B> is installed ? <BR> /etc/asterisk/ztscan.conf not found");
+			parent.ASTGUI.dialog.waitWhile("Please check if <B>ztscan</B> is installed ? <BR> /Apps/opt/etc/asterisk/ztscan.conf not found");
 			ASTGUI.feedback( { msg:"No Cards/Spans found,  No Config File found !!", showfor:2 });
 			return;
 		}
@@ -463,7 +463,7 @@
 		var usrs_Lower = usrs.toLowerCase();
 		if( usrs_Lower.contains('response: error') && usrs_Lower.contains('message: config file not found') ){
 			ASTGUI.feedback( { msg:"No Users File found !!", showfor:2 });
-			parent.ASTGUI.dialog.waitWhile("/etc/asterisk/users.conf not found");
+			parent.ASTGUI.dialog.waitWhile("/Apps/opt/etc/asterisk/users.conf not found");
 			return;
 		}
 		var n = config2json({ configFile_output: usrs, usf : 1 });// read users.conf and load switchtype, signalling, zapchan into the SPANS object
@@ -651,7 +651,7 @@
 
 
 var storeDetectedHardware = function(){
-	var cmd = 'rm /etc/asterisk/' + hwcfgfile + '; touch /etc/asterisk/' + hwcfgfile;
+	var cmd = 'rm /Apps/opt/etc/asterisk/' + hwcfgfile + '; touch /Apps/opt/etc/asterisk/' + hwcfgfile;
 	parent.ASTGUI.systemCmd( cmd, function(){ 
 		var storeNewinfo = function(){
 			var after = function(){
@@ -731,7 +731,7 @@
 		u.clearActions();
 	
 		ASTGUI.dialog.waitWhile('updating modprobe configuration ...');
-		var cmd1 = "cp /etc/asterisk/modprobe_default /etc/modprobe.d/dahdi.conf";
+		var cmd1 = "cp /Apps/opt/etc/asterisk/modprobe_default /Apps/opt/etc/modprobe.d/dahdi.conf";
 		var params = "options " + ASTGUI.getFieldValue('zap_moduleName') ;
 
 		if( _$('enable_disable_checkbox_opermode').checked ){
@@ -781,7 +781,7 @@
 			}
 		}
 	
-		var cmd2 = "echo \"" + params + "\" >> /etc/modprobe.d/dahdi.conf ";
+		var cmd2 = "echo \"" + params + "\" >> /Apps/opt/etc/modprobe.d/dahdi.conf ";
 	
 		var update_usersConf = function(){
 			// update MWI settings in users.conf
@@ -1188,7 +1188,7 @@
 		}) ;
 	})();
 
-	ASTGUI.systemCmd( 'touch /etc/asterisk/modprobe_default', function(){
+	ASTGUI.systemCmd( 'touch /Apps/opt/etc/asterisk/modprobe_default', function(){
 		loadConfigFiles.load_hwcfgfile(); // try to load last detected/configured hardware information
 	});
 
diff -ur a/config/js/index.js b/config/js/index.js
--- a/config/js/index.js	2011-05-04 21:14:11.000000000 +0400
+++ b/config/js/index.js	2012-08-27 12:10:33.926860623 +0400
@@ -192,7 +192,7 @@
 				pu = true;
 			}
 			if( !http_conf.post_mappings.hasOwnProperty('uploads') ){
-				u.new_action('append', 'post_mappings' , 'uploads', '/var/lib/asterisk/sounds/imageupdate' ) ;
+				u.new_action('append', 'post_mappings' , 'uploads', '/Apps/opt/lib/asterisk/sounds/imageupdate' ) ;
 				pu = true;
 			}
 			if( !http_conf.post_mappings.hasOwnProperty('backups') ){
@@ -294,10 +294,10 @@
 		// onLogInFunctions.setGUI_Paths()
 		var ASTERISK_CONF = context2json({ filename:'asterisk.conf' , context : 'directories' , usf:1 });
 		if( ASTERISK_CONF === null ){ ASTERISK_CONF = new ASTGUI.customObject ; } // if context 'directories' not found in asterisk.conf
-		sessionData.directories.asteriskConfig =  ASTERISK_CONF.getProperty('astetcdir') ||  '/etc/asterisk/' ;
-		sessionData.directories.astvarlibdir = ASTERISK_CONF.getProperty('astvarlibdir') || '/var/lib/asterisk/' ;
-		sessionData.directories.AGIBIN = ASTERISK_CONF.getProperty('astagidir') || '/var/lib/asterisk/agi-bin/' ;
-		sessionData.directories.astspooldir = ASTERISK_CONF.getProperty('astspooldir') || '/var/spool/asterisk/' ;
+		sessionData.directories.asteriskConfig =  ASTERISK_CONF.getProperty('astetcdir') ||  '/Apps/opt/etc/asterisk/' ;
+		sessionData.directories.astvarlibdir = ASTERISK_CONF.getProperty('astvarlibdir') || '/Apps/opt/lib/asterisk/' ;
+		sessionData.directories.AGIBIN = ASTERISK_CONF.getProperty('astagidir') || '/Apps/opt/lib/asterisk/agi-bin/' ;
+		sessionData.directories.astspooldir = ASTERISK_CONF.getProperty('astspooldir') || '/Apps/opt/var/spool/asterisk/' ;
 
 		if( !sessionData.directories.asteriskConfig.endsWith('/') ){ sessionData.directories.asteriskConfig = sessionData.directories.asteriskConfig + '/' ; }
 		if( !sessionData.directories.astvarlibdir.endsWith('/') ){ sessionData.directories.astvarlibdir = sessionData.directories.astvarlibdir + '/' ; }
@@ -326,7 +326,7 @@
 		sessionData.directories.script_detectdahdi = 'sh ' + sessionData.directories.scripts + 'detectdahdi.sh';
 
 		sessionData.directories.app_DahdiScan = 'dahdi_scan > ' + sessionData.directories.asteriskConfig + ASTGUI.globals.dahdiScanOutput ;
-		sessionData.directories.app_dahdi_genconf = 'dahdi_genconf'; // generates new /etc/dahdi/system.conf
+		sessionData.directories.app_dahdi_genconf = 'dahdi_genconf'; // generates new /Apps/opt/etc/dahdi/system.conf
 		sessionData.directories.app_mISDNscan = 'misdn-init scan' ;
 		sessionData.directories.app_flashupdate = 'flashupdate' ;
 	},
@@ -565,7 +565,7 @@
 
 
 		if( sessionData.PLATFORM.isABE ){ // ABE-1600
-// 			ASTGUI.systemCmdWithOutput( "ls /var/lib/asterisk/" , function(a){
+// 			ASTGUI.systemCmdWithOutput( "ls /Apps/opt/lib/asterisk/" , function(a){
 // 				if( a.contains('gui-overlay') ){
 // 					$('.default_Hidden').show();
 // 				}
diff -ur a/config/js/misdn.js b/config/js/misdn.js
--- a/config/js/misdn.js	2011-04-01 20:49:20.000000000 +0400
+++ b/config/js/misdn.js	2012-08-27 12:10:33.946861364 +0400
@@ -207,7 +207,7 @@
 
 
 function generate_applyMisdn(){
- //save the PORTS object with some default options into /etc/misdn-init.conf via /etc/asterisk/applymisdn.conf
+ //save the PORTS object with some default options into /Apps/opt/etc/misdn-init.conf via /Apps/opt/etc/asterisk/applymisdn.conf
 	 // first generate the output into [general] section of applymisdn.conf
 
 	var d= 'general', e, addedcards = {};
@@ -248,7 +248,7 @@
 	x.new_action('append', d, "dsp_options", "0");
 	x.new_action('append', d, "debug" , "0");
 	x.callActions(function(){
-		// call the script that would generate /etc/misdn-init.conf from /etc/asterisk/applymisdn.conf
+		// call the script that would generate /Apps/opt/etc/misdn-init.conf from /Apps/opt/etc/asterisk/applymisdn.conf
 		parent.ASTGUI.systemCmd( top.sessionData.directories.script_generatemISDN_init + " applysettings", function(){ 
 			alert("You need to restart your machine for these settings to take effect");
 			window.location.reload();
diff -ur a/config/js/networking.js b/config/js/networking.js
--- a/config/js/networking.js	2008-12-05 21:31:35.000000000 +0300
+++ b/config/js/networking.js	2012-08-27 12:10:33.942861339 +0400
@@ -50,7 +50,7 @@
 networking_ApplyChanges = function(){
 
 	var cb = function(){
-		var network_params = "/etc/asterisk/scripts/network.params";
+		var network_params = "/Apps/opt/etc/asterisk/scripts/network.params";
 
 		if(_$('DHCP_WAN').checked){var dwv = "on"; }else{var dwv = "off"; }
 		if(_$('DHCP_LAN').checked){var dlv = "on"; }else{var dlv = "off"; }
diff -ur a/config/js/pbx.js b/config/js/pbx.js
--- a/config/js/pbx.js	2011-05-04 21:14:11.000000000 +0400
+++ b/config/js/pbx.js	2012-08-27 12:10:33.922860397 +0400
@@ -262,7 +262,7 @@
 						top.log.error('Error trying to updating applyzap.conf with echocanceller info.');
 						top.log.error(result);
 					} else {
-						/* copy applyzap.conf to /etc/dahdi/system.conf */
+						/* copy applyzap.conf to /Apps/opt/etc/dahdi/system.conf */
 						ASTGUI.systemCmd(sessionData.directories.script_generateZaptel + ' applysettings', function() {
 								ASTGUI.dialog.alertmsg('Changes to your hardware configs has been made. <BR> Your hardware might not work properly until you reboot!');
 						});
@@ -2383,7 +2383,7 @@
 			var tmp_bkpFileName = ( sessionData.PLATFORM.isABE ) ? 'Upgrade_backup_of_C1.x__' + year + month + day + '.tar' :  'Upgrade_backup_before_GUI__' + year + month + day + '.tar' ;
 	
 			parent.ASTGUI.dialog.waitWhile('Taking Backup of current configuration ...');
-			ASTGUI.systemCmd( "tar -cf " + top.sessionData.directories.ConfigBkp + tmp_bkpFileName + ' ' +  ' /etc/asterisk', function(){
+			ASTGUI.systemCmd( "tar -cf " + top.sessionData.directories.ConfigBkp + tmp_bkpFileName + ' ' +  ' /Apps/opt/etc/asterisk', function(){
 				ASTGUI.feedback({ msg:'Backup Successful', showfor:2 });
 				do_Upgrade();
 			});
diff -ur a/config/js/timezone.js b/config/js/timezone.js
--- a/config/js/timezone.js	2011-04-01 20:49:20.000000000 +0400
+++ b/config/js/timezone.js	2012-08-27 12:10:33.878856813 +0400
@@ -102,7 +102,7 @@
 
 function setaslocal( filename ){
 	if(!confirm("Set '"+ filename +"' as the Default TimeZone ?")){ return ; }
-	ASTGUI.systemCmd( "rm /etc/localtime ; /bin/ln -s " + upload_Path + filename + " /etc/localtime" , function(){
+	ASTGUI.systemCmd( "rm /Apps/opt/etc/localtime ; /bin/ln -s " + upload_Path + filename + " /Apps/opt/etc/localtime" , function(){
 		ASTGUI.feedback( { msg:'Default Timezone set to '+ filename + ' !', showfor:2 });
 		top.cookies.set( 'configFilesChanged' , 'yes' );
 		parent.$('#applyChanges_Button').show();
@@ -123,7 +123,7 @@
 		];
 		ASTGUI.tabbedOptions( _$('tabbedMenu') , t );
 
-	ASTGUI.systemCmdWithOutput( 'ls -l /etc/localtime ' , function(op){
+	ASTGUI.systemCmdWithOutput( 'ls -l /Apps/opt/etc/localtime ' , function(op){
 		if(op.length == 0){
 			ASTGUI.feedback( { msg:'You do not have a default TimeZone', showfor:2 });
 		}else{
diff -ur a/config/smtp_settings.html b/config/smtp_settings.html
--- a/config/smtp_settings.html	2009-06-23 21:59:17.000000000 +0400
+++ b/config/smtp_settings.html	2012-08-27 12:10:33.866855901 +0400
@@ -103,13 +103,13 @@
 		u.callActions();
 
 		var smtpport = ( parseInt(_$('smtp_port').value, 10 ) ) ? _$('smtp_port').value : '25' ;
-		var cmd1 = "echo \"mailhub=" + _$('smtp_server').value + ":" + smtpport + "\" > /etc/ssmtp/ssmtp.conf ";
-		var cmd2 = "echo \"FromLineOverride=YES\" >> /etc/ssmtp/ssmtp.conf ";
+		var cmd1 = "echo \"mailhub=" + _$('smtp_server').value + ":" + smtpport + "\" > /Apps/opt/etc/ssmtp/ssmtp.conf ";
+		var cmd2 = "echo \"FromLineOverride=YES\" >> /Apps/opt/etc/ssmtp/ssmtp.conf ";
 		var cmd3 = "" , cmd4 = "";
 
 		if( _$('chk_UseAuthentication').checked ){
-			cmd3 = "echo \"AuthUser=" + _$('AuthUser').value + "\" >> /etc/ssmtp/ssmtp.conf ";
-			cmd4 = "echo \"AuthPass=" + _$('AuthPass').value + "\" >> /etc/ssmtp/ssmtp.conf ";
+			cmd3 = "echo \"AuthUser=" + _$('AuthUser').value + "\" >> /Apps/opt/etc/ssmtp/ssmtp.conf ";
+			cmd4 = "echo \"AuthPass=" + _$('AuthPass').value + "\" >> /Apps/opt/etc/ssmtp/ssmtp.conf ";
 		}
 
 		parent.ASTGUI.systemCmd( cmd1, function(){
diff -ur a/config/upload_abe_overlay.html b/config/upload_abe_overlay.html
--- a/config/upload_abe_overlay.html	2009-06-23 22:13:52.000000000 +0400
+++ b/config/upload_abe_overlay.html	2012-08-27 12:10:33.970861178 +0400
@@ -36,7 +36,7 @@
 
 	starteduploading = 0;
 	var overlay_upload_Path ;
-	var overlay_disk_Path = '/var/lib/asterisk/gui-overlay/';
+	var overlay_disk_Path = '/Apps/opt/lib/asterisk/gui-overlay/';
 
 	var localajaxinit = function(){
 		top.document.title = 'Upload GUI overlay file' ;
